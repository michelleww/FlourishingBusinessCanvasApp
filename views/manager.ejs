<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Manager page</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="css/user.css">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous">
</head>

<body>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light navbar-expand-lg fixed-top bg-light" id="mainNav">
        <div class="container"><h1>Flourishing Business Canvas</h1>
            <ul class="nav navbar-nav ml-auto text-uppercase">
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="renderManageUsers()">Manage users</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="renderManageCanvas()">Manage canvas</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" onclick="getProfile()">Profile</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" onclick="getLogin()">Log Out</button>
                </li>
            </ul>
        </div>
    </nav>

    <section class="text-center mb-4 " id="post-TwoRow">
    </section>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
            crossorigin="anonymous"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>

    <!-- <script src="js/popup.js"></script> -->

<script type="text/javascript">
    "use strict"
    console.log("popup.js")

    let canvasUsers = []
    let canvasIds = []
    let canvasTitles = []
    let currentUser = null;
    $(document).ready(main);

    function listCookies() {
	    var theCookies = document.cookie.split(';');
	    var aString = '';
	    for (var i = 1 ; i <= theCookies.length; i++) {
	        aString += i + ' ' + theCookies[i-1] + "\n";
	    }
	    return aString;
	}

    function deleteAllCookies() {
	    var cookies = document.cookie.split(";");

	    for (var i = 0; i < cookies.length; i++) {
	        var cookie = cookies[i];
	        var eqPos = cookie.indexOf("=");
	        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
	        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
	    }
	}	

    function getLogin(){
    	window.location.href = '/login'
    	deleteAllCookies()
    }

    function getProfile() {
        window.location.href = '/profile'
    }

    // Used to call functions after page is fully loaded.
    function main() {
        // send get request and set global arrays
         currentUser = Cookies.get('email');
         if (currentUser == null) {
            alert("Our system detects that you have not yet signed in to our website, we will transfer you to the log in page immediately.")
            window.location.href = '/login'
            return
         }
         $.ajax({
             type: "GET",
             url: "/library/get",
             success: function (data) {
                 canvasTitles = data.title
                 canvasIds = data.canvas
                 canvasUsers = data.users
        			  renderFbc()
             }
         })
    }

    function renderFbc() {
        const imgUrl = '/images/fbc.png'
        for (let i = 0; i < canvasIds.length; i++) {
            const html = `
            <div class="col-lg-3 col-md-6 col-sm-6 mb-4 post-column">
                <a id="${canvasIds[i]}" class="canvasClick" style="cursor:pointer">
                    <div class="card shadow postCard">
                        <div class="image-constrain">
                            <img src="${imgUrl}" class="card-img-top post-img p-3">
                        </div>
                        <div class="card-body text-center">
                            <h6 class="post-title font-weight-bold font-italic text-truncate">${canvasTitles[i]}</h6>
                        </div>
                    </div>
                </a>
            </div>`
            const rowNum = Math.ceil((i + 1) /4)
            if (i % 4 == 0) {
                $('#post-TwoRow').append(`<div id="row${rowNum}"class="row fadeIn post-row"></div>`)
            }
            $(`#row${rowNum}`).append(html)
        }
    }

    $('body').on('click', 'a.canvasClick', function() {
        console.log(11)
        console.log($(this)[0].id)
        const canvasId = $(this)[0].id
        const empty = "random"
        const send = {canvasId, empty}
        console.log(send)
        $.ajax({
            type: "POST",
            url: "/library/id",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    window.location.href = '/canvas'
                } else {
                    console.log('fail')
                }
            }
        })

    })

    function renderManageUsers() {

        let manageUsersContent = '<div class="modal-body manageUserContainer"><form>'
        for(let i = 0; i < canvasTitles.length; i++){
            manageUsersContent += `<div class="manageUsersCanvas"><h5>${canvasTitles[i]}<span style="display: none">${canvasIds[i]}</span></h5>`
            for (let j = 0; j < canvasUsers[i].length; j++){
                if ((canvasUsers[i][j]) == currentUser) {
                    continue;
                }
                manageUsersContent += `<div class="form-check">
                <input class="form-check-input semantic" type="checkbox">
                <label class="form-check-label" for="defaultCheck1">${canvasUsers[i][j]}</label></div>`
            }
            manageUsersContent += `<div class="btnContainer" style="text-align:right">
            <button type="button" class="btn btn-light semantic addUserPrompt">Add</button>
            <button type="button" class="btn btn-light semantic" onclick="removeUsers()">Remove</button></div></div>`
        }
        manageUsersContent += '</form></div>'
        $(".modal-title").html("Manage users")
        $(".modal-body").html(manageUsersContent)
        $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>`)
    }

    $('body').on('change', '.form-check-input', function() {
        const canvases = document.getElementsByClassName('manageUsersCanvas')
        if ($(this).is(':checked')) {
            const canvasId = $(this).parent().parent().find('span').text()
            console.log(canvasId)
            // all the canvas divs in manage user form
            
            for (let canvas of canvases) {
                if (canvas.getElementsByTagName('span')[0].innerHTML != canvasId) {
                    const checkBoxes = canvas.getElementsByClassName('form-check-input')
                    for (let checkbox of checkBoxes) {
                        checkbox.disabled = true;
                    }
                }
            }
        } else {
            for (let canvas of canvases) {
                const checkBoxes = canvas.getElementsByClassName('form-check-input')
                for (let checkbox of checkBoxes) {
                    checkbox.disabled = false;
                }
            }
        }
    })

    $('body').on('click', 'button.addUserPrompt', function() {
        const html = `<div class="input-group">
        <input type="text" class="form-control semantic" placeholder="New user email" >
        <div class="input-group-append">
            <button class="btn btn-primary addUserDone semantic" type="button">Add</button>
        </div></div>`
        $(this).parent().html(html)
    })

    function validateEmail(email) {
    	var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;
    	var result = re.test(email.toLowerCase());
    	if (!result) {
    		alert("Please enter a valid email.");
    		return false;
    	}
    	return true;
    }
    
    $('body').on('click', '.manageUserContainer', function(e) {
        const name = e.target.classList
        if (!name.contains('semantic')) {
            renderManageUsers()

        }
    })

    $('body').on('click', 'button.addUserDone', function() {
        const email = [$(this).parent().prev().val()]
        const canvasId = $(this).parent().parent().parent().parent().children().find('span').text();
        
        const index = canvasIds.findIndex(id => id == canvasId)
        if (canvasUsers[index].includes(email[0])) {
            alert("Duplicate user email.")
            $(this).parent().prev().val('')
            return;
        }
        console.log(canvasUsers)
        //send update request
        console.log(canvasId)
        const type = "add"
        const send = {type, canvasId, email}

        if (validateEmail(JSON.stringify(email))){
        	console.log("validateEmail: " + validateEmail(JSON.stringify(email)))
	        $.ajax({
	            type: "POST",
	            url: "/manager/user",
	            data: send,
	            success: function (data) {
	                if (data == 'true') {
	                    const index = canvasIds.findIndex(id => id == canvasId)
	                    canvasUsers[index].push(email[0])
	                    Email.send({
							Host: "smtp.elasticemail.com",
	            			Username: "wangluya2014@gmail.com",
	            			Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
	            			To: email,
	            			From: "wangluya2014@gmail.com",
	            			Subject: "This is the subject",
	            			Body: "Testing for register!."
	          			  });
	                    renderManageUsers()
	                } else {
	                    console.log('fail add user')
	                }
	            }
	        })
    	}
    })


    function removeUsers() {
        const selected = $('.form-check-input:checked')
        if (selected.length == 0) {
            alert("No User Selected.")
            return
        }

        const usersToRemove = []
        for (let e of selected) {
            usersToRemove.push(e.nextElementSibling.innerHTML)
        }
        const canvasId = selected[0].parentElement.parentElement.children[0].getElementsByTagName('span')[0].innerHTML
        for (let i = 1; i < selected.length; i++) {
				const tempId = selected[i].parentElement.parentElement.children[0].getElementsByTagName('span')[0].innerHTML
        		if (tempId != canvasId) {
					console.log('Cannot remove users in different canvas simultaneously')
					return        		
        		}        
        }
        

        // canvasUsers[index] = canvasUsers[index].filter(u => !(usersToRemove.includes(u.toString())))
        console.log(canvasUsers)
        // renderManageUsers()
        const email = usersToRemove
        
        //send POST request
        const type = "remove"
        const send = {type, canvasId, email}
        console.log(send)
        
        $.ajax({
            type: "POST",
            url: "/manager/user",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    const index = canvasIds.findIndex(id => id == canvasId)
                    canvasUsers[index] = canvasUsers[index].filter(u => !(usersToRemove.includes(u.toString())))
                    renderManageUsers()
                } else {
                    console.log('fail remove user')
                }
            }
        })
    }


    function renderManageCanvas(){
        let manageCanvasContent = '<div class="modal-body manageCanvasContainer"><form>'
        for (let i = 0; i < canvasTitles.length; i++){
            manageCanvasContent += `<div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
            <label class="form-check-label" for="defaultCheck1">${canvasTitles[i]}<span style="display:none">${canvasIds[i]}</span></label>
        </div>`
        }
        manageCanvasContent += '</form></div>'
        manageCanvasContent += `<div id="newCanvasInputContainer" class="input-group">
        <input id="newCanvas" type="text" class="form-control" placeholder="New canvas title" >
        <div class="input-group-append">
            <button class="btn btn-primary" type="button" onclick="addNewCanvas()">Add</button>
        </div></div>`

        $(".modal-title").html("Manage Canvas")
        $(".modal-body").html(manageCanvasContent)
        $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="removeCanvas()">Remove</button>`)
    }

    function addNewCanvas() {
        const title = $('#newCanvas').val()
        // send post request
        const send = {title}
        console.log(send)
        $.ajax({
            type: "POST",
            url: "/manager/add",
            data: send,
            success: function (data) {
                // if (data == 'true') {
                canvasIds.push(data.id)
                canvasTitles.push(title)
                canvasUsers.push([])
                removeMainSection()
                renderManageCanvas()
                renderFbc()
                // } else {
                //     console.log('fail add canvas')
                }
            
        })
    }

    function removeCanvas() {
        const selected = $('.form-check-input:checked')
        const canvasId = []
        for (let e of selected) {

            const canId = e.nextElementSibling.getElementsByTagName('span')[0].innerHTML
            console.log(canId)
            canvasId.push(canId)
        }

        const send = {canvasId}
        console.log(send)
        
        $.ajax({
            type: "DELETE",
            url: "/manager/del",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    for (let canId of canvasId) {
                        const indexToRemove = canvasIds.findIndex(id => id == canId)
                        canvasTitles.splice(indexToRemove, 1)
                        canvasIds.splice(indexToRemove, 1)
                        canvasUsers.splice(indexToRemove, 1)
                    }
                    renderManageCanvas()
                    removeMainSection()
                    renderFbc()
                } else {
                    console.log('fail remove canvas')
                }
            }
        })
    }

    function removeMainSection() {
        $('section').html('')
    }

</script>
</body>
</html>