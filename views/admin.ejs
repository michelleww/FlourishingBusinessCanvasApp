<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Administrative page</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="css/user.css">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous">
</head>

<body>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light navbar-expand-lg fixed-top bg-light" style="height: 110px" id="mainNav">
        <div class="container-fluid"><h1>Flourishing Business Canvas</h1>
            <ul class="nav navbar-nav ml-auto text-uppercase">
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="renderManageUsers()">Users</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="renderManageCanvas()">Canvases</button>
                </li>
                <li class="nav-item ml-2">
                        <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="getNotification()">Notification</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#exampleModal" onclick="getInvitation()">Invitation</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" onclick="getProfile()">Profile</button>
                </li>
                <li class="nav-item ml-2">
                    <button type="button" class="btn btn-light" onclick="getLogin()">Log Out</button>
                </li>
            </ul>
        </div>
    </nav>

    <section class="mb-4 container-fluid" id="post-TwoRow">
        <div class="mt-4 mb-5">
            <div class="d-flex mb-3">
                <h3 class="ml-auto mr-auto">My Canvas</h3>
            </div>
            <div id="myControl" class="">
            </div>
        </div>
        <hr>
        <div class="mt-4 mb-5">
            <div class="d-flex mb-3">
                <h3 class="ml-auto mr-auto">Other's Canvas</h3>
            </div>
            <div id="notMyControl" class="">
            </div>
        </div>
    </section>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
            crossorigin="anonymous"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>

    <!-- <script src="js/popup.js"></script> -->

<script type="text/javascript">
    "use strict"
    console.log("popup.js")
    const dataFormat = { year: 'numeric', month: 'short', day: 'numeric' };

    let regTitle = []
    let regId = []
    let mngTitle = []
    let mngId = []
    let mngUsers = []
    let notification = null;
    let currentUser = null;
    $(document).ready(() => {
        main();
        $("#post-TwoRow").css({top: $("#mainNav").height() + 20});
    });
    $(window).resize(() => {
        $("#post-TwoRow").css({top: $("#mainNav").height() + 20});
    });

    function listCookies() {
	    var theCookies = document.cookie.split(';');
	    var aString = '';
	    for (var i = 1 ; i <= theCookies.length; i++) {
	        aString += i + ' ' + theCookies[i-1] + "\n";
	    }
	    return aString;
	}

    function deleteAllCookies() {
	    var cookies = document.cookie.split(";");

	    for (var i = 0; i < cookies.length; i++) {
	        var cookie = cookies[i];
	        var eqPos = cookie.indexOf("=");
	        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
	        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
	    }
	}	

    function getLogin(){
    	window.location.href = '/login'
    	deleteAllCookies()
    }

    function getProfile() {
        window.location.href = '/profile'
    }

    // Used to call functions after page is fully loaded.
    function main() {
        // send get request and set global arrays
         console.log('haha')
         currentUser = Cookies.get('email');
         $.ajax({
             type: "GET",
             url: "/admin/get",
             success: function (data) {
                 regTitle = data.regTitle
                 regId = data.regId
                 mngTitle = data.mngTitle
                 mngId = data.mngId
                 mngUsers = data.mngUsers
                 notification = data.notification

                 renderFbc(mngId, mngTitle, 'myControl')
                 renderFbc(regId, regTitle, 'notMyControl')
             }
         })
    }

    function renderFbc(ids, titles, control) {
        if (ids == null || ids.length == 0) {
                let message = null;
                if (control == "myControl") {
                    message = "Currently, there is no canvas under my control."
                } else {
                    message = "Currently, there is no canvas I am involved in."
                }
                const html = `<h5 class="ml-auto mr-auto">${message}</h5>`
                $(`#${control}`).append(html)
                return
        }
        const imgUrl = '/images/fbc.png'
        for (let i = 0; i < ids.length; i++) {
            const html = `
            <div class="col-lg-3 col-md-6 col-sm-6 mb-4 post-column">
                <a id="${ids[i]}" class="canvasClick" style="cursor:pointer">
                    <div class="card shadow postCard">
                        <div class="image-constrain">
                            <img src="${imgUrl}" class="card-img-top post-img p-3">
                        </div>
                        <div class="card-body pt-0 text-center">
                            <h6 class="post-title font-weight-bold font-italic text-truncate">${titles[i]}</h6>
                        </div>
                    </div>
                </a>
            </div>`
            const rowNum = Math.ceil((i + 1) /4)
            const rowId = `${control}${rowNum}`
            if (i % 4 == 0) {
                $(`#${control}`).append(`<div id="${rowId}" class="row fadeIn post-row"></div>`)
            }
            $(`#${rowId}`).append(html)
        }
    }

    $('body').on('click', 'a.canvasClick', function() {
        console.log(11)
        console.log($(this)[0].id)
        const canvasId = $(this)[0].id
        const empty = "random"
        const send = {canvasId, empty}
        console.log(send)
        $.ajax({
            type: "POST",
            url: "/library/id",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    window.location.href = '/canvas'
                } else {
                    console.log('fail')
                }
            }
        })

    })

    function getNotification() {
        $.ajax({
            type: "GET",
            url: "/admin/notification",
            success: function (data) {
                notification = data

                let notificationContent = '<div class="modal-body notificationContainer" id="notificationList">'

                for (let i = 0; i < notification.length; i++){
                    const noti = notification[i]
                    const notiToString = noti.userName + '<br>' + noti.userEmail + '<br>' + new Date(noti.userTime).toLocaleDateString("en-US", dataFormat)
                    
                    notificationContent += `<div class="form-check">
                    <input class="form-check-input semantic" type="checkbox">
                    <label class="form-check-label">${notiToString}</label></div>`
                }

                $(".modal-title").html("Manage Notifications")
                $(".modal-body").html(notificationContent)
                $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="acceptUser()">Accept</button>
                        <button type="button" class="btn btn-primary" onclick="declineUser()">Decline</button>`)
            }
        })
    }

    $('body').on('change', '#notificationList', function() {
        const length = $('#notificationList').find('input[type=checkbox]').length

        if ($('#notificationList').find('input[type=checkbox]:checked').length == 1) {
            for (let i = 0; i < length; i++) {
                if (!$('#notificationList').find('input[type=checkbox]')[i].checked) {
                    $('#notificationList').find('input[type=checkbox]')[i].disabled = true;
                }
            }
        } else {
            for (let i = 0; i < length; i++) {
                if (!$('#notificationList').find('input[type=checkbox]')[i].checked) {
                    $('#notificationList').find('input[type=checkbox]')[i].disabled = false;
                }
            }
        }
    })

    function acceptUser() {        
        const selected = $('#notificationList').find('input[type=checkbox]:checked')
        if (selected.length == 0) {
            alert("No User Selected.")
            return
        }

        const user = selected[0].nextElementSibling.innerHTML
        const email = user.split("<br>")[1]

        const send = {email}

        $.ajax({
            type: "POST",
            url: "/admin/accept",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    Email.send({
                        Host: "smtp.elasticemail.com",
                        Username: "wangluya2014@gmail.com",
                        Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
                        To: email,
                        From: "wangluya2014@gmail.com",
                        Subject: "This is the subject",
                        Body: "You are accepted!"
                    });
                    getNotification()
                } else {
                    console.log('fail to accept user')
                }
            }
        })
    }

    function declineUser() {        
        const selected = $('#notificationList').find('input[type=checkbox]:checked')
        if (selected.length == 0) {
            alert("No User Selected.")
            return
        }

        const user = selected[0].nextElementSibling.innerHTML
        const email = user.split("<br>")[1]

        const send = {email}

        $.ajax({
            type: "POST",
            url: "/admin/decline",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    Email.send({
                        Host: "smtp.elasticemail.com",
                        Username: "wangluya2014@gmail.com",
                        Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
                        To: email,
                        From: "wangluya2014@gmail.com",
                        Subject: "This is the subject",
                        Body: "You are declined..."
                    });
                    getNotification()
                } else {
                    console.log('fail to decline user')
                }
            }
        })
    }

    function renderManageUsers() {
        $.ajax({
            type: "GET",
            url: "/admin/users",
            success: function (data) {
                let manageUsersContent = '<div class="modal-body manageUserContainer" id="manageUsersList">'
                for (let i = 0; i < data.length; i++){
                    const user = data[i]
                    
                    manageUsersContent += `<div class="form-check">
                    <input class="form-check-input semantic" type="checkbox">
                    <label class="form-check-label">${user}</label></div>`
                }

                $(".modal-title").html("Manage Users")
                $(".modal-body").html(manageUsersContent)
                $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="removeUsers()">Remove</button>`)
            }
        })
    }

    $('body').on('change', '#manageUsersList', function() {
        const length = $('#manageUsersList').find('input[type=checkbox]').length

        if ($('#manageUsersList').find('input[type=checkbox]:checked').length == 1) {
            for (let i = 0; i < length; i++) {
                if (!$('#manageUsersList').find('input[type=checkbox]')[i].checked) {
                    $('#manageUsersList').find('input[type=checkbox]')[i].disabled = true;
                }
            }
        } else {
            for (let i = 0; i < length; i++) {
                if (!$('#manageUsersList').find('input[type=checkbox]')[i].checked) {
                    $('#manageUsersList').find('input[type=checkbox]')[i].disabled = false;
                }
            }
        }
    })

    function removeUsers() {
        const selected = $('#manageUsersList').find('input[type=checkbox]:checked')
        if (selected.length == 0) {
            alert("No User Selected.")
            return
        }

        const user = selected[0].nextElementSibling.innerHTML
        const type = "remove"
        const send = {type, user}
        
        $.ajax({
            type: "POST",
            url: "/admin/edit",
            data: send,
            success: function (data) {
                renderManageUsers()

                removeMainSection()
                regTitle = data.regTitle
                regId = data.regId
                mngTitle = data.mngTitle
                mngId = data.mngId
                mngUsers = data.mngUsers
                notification = data.notification
                renderFbc(mngId, mngTitle, 'myControl')
                renderFbc(regId, regTitle, 'notMyControl')

                Email.send({
                    Host: "smtp.elasticemail.com",
                    Username: "wangluya2014@gmail.com",
                    Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
                    To: user,
                    From: "wangluya2014@gmail.com",
                    Subject: "This is the subject",
                    Body: "You are kicked out of FBC organization!!!"
                });
            }
        })
    }

    function validateEmail(email) {
    	var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;
    	var result = re.test(email.toLowerCase());
    	if (!result) {
    		alert("Please enter a valid email.");
    		return false;
    	}
    	return true;
    }

    function getInvitation() {
        let manageInvitation = `<div class="modal-body manageInvitation">
                <div id="newInvitationInputContainer" class="input-group">
                <input id="newInvitation" type="text" class="form-control" placeholder="Enter email...">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="button" onclick="addUser()">Add</button>
                </div></div></div>`

        $(".modal-title").html("Manage Invitations")
        $(".modal-body").html(manageInvitation)
        $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>`)
    }

    function addUser() {
        const email = document.querySelector("#newInvitation").value;
        if (validateEmail(email)) {
            const type = "add"
            const user = email
            const send = {type, user}

            $.ajax({
                type: "POST",
                url: "/admin/edit",
                data: send,
                success: function (data) {
                    if (data == 'true') {
                        Email.send({
                            Host: "smtp.elasticemail.com",
                            Username: "wangluya2014@gmail.com",
                            Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
                            To: email,
                            From: "wangluya2014@gmail.com",
                            Subject: "This is the subject",
                            Body: "Testing for adding new users as admin!"
                        });
                        getInvitation()
                    } else {
                        console.log('fail to add user')
                    }
                }
            })
        }
    }

    function renderManageCanvas(){
        let manageCanvasContent = '<div class="modal-body manageCanvasContainer" id="manageCanvasChecklist">'
        for (let i = 0; i < mngTitle.length; i++){
            manageCanvasContent += `<div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
            <label class="form-check-label" for="defaultCheck1">${mngTitle[i]}<span style="display:none">${mngId[i]}</span></label>
        </div>`
        }
        for (let i = 0; i < regTitle.length; i++){
            manageCanvasContent += `<div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
            <label class="form-check-label" for="defaultCheck1">${regTitle[i]}<span style="display:none">${regId[i]}</span></label>
        </div>`
        }

        manageCanvasContent += `<div id="newCanvasInputContainer" class="input-group">
        <input id="newCanvas" type="text" class="form-control" placeholder="New canvas title" >
        <div class="input-group-append">
            <button class="btn btn-primary" type="button" onclick="addNewCanvas()">Add</button>
        </div></div>`

        $(".modal-title").html("Manage Canvas")
        $(".modal-body").html(manageCanvasContent)
        $(".modal-footer").html(`<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="copyCanvas()">Copy</button>
                    <button type="button" class="btn btn-primary" onclick="removeCanvas()">Remove</button>`)
    }

    $('body').on('change', '#manageCanvasChecklist', function() {
        const length = $('#manageCanvasChecklist').find('input[type=checkbox]').length

        if ($('#manageCanvasChecklist').find('input[type=checkbox]:checked').length == 1) {
            for (let i = 0; i < length; i++) {
                if (!$('#manageCanvasChecklist').find('input[type=checkbox]')[i].checked) {
                    $('#manageCanvasChecklist').find('input[type=checkbox]')[i].disabled = true;
                }
            }
        } else {
            for (let i = 0; i < length; i++) {
                if (!$('#manageCanvasChecklist').find('input[type=checkbox]')[i].checked) {
                    $('#manageCanvasChecklist').find('input[type=checkbox]')[i].disabled = false;
                }
            }
        }
    })

    function addNewCanvas() {
        const title = $('#newCanvas').val()

        const send = {title}

        $.ajax({
            type: "POST",
            url: "/manager/add",
            data: send,
            success: function(data) {
                mngId.push(data.id)
                mngTitle.push(title)
                mngUsers.push([])
                renderManageCanvas()
                removeMainSection()
                renderFbc(mngId, mngTitle, 'myControl')
                renderFbc(regId, regTitle, 'notMyControl')
            }
        })
    }

    function copyCanvas() {
        const e = $('.form-check-input:checked')[0]
        const canId = e.nextElementSibling.getElementsByTagName('span')[0].innerHTML

        const old_title = $('.form-check-input:checked').next().text().replace(canId, "")
        const title = old_title + "-copy"

        // current canvas id, new title
        const send = {canId, title}

        $.ajax({
            type: "POST",
            url: "/canvas/copy",
            data: send,
            success: function (data) {
                // get the same canvas with a new id back
                mngId.push(data.id)
                mngTitle.push(title)
                mngUsers.push(data.users)
                renderManageCanvas()
                removeMainSection()
                renderFbc(mngId, mngTitle, 'myControl')
                renderFbc(regId, regTitle, 'notMyControl')
            } 
        })
    }

    function removeCanvas() {
        const e = $('.form-check-input:checked')[0]
        const canvasId = e.nextElementSibling.getElementsByTagName('span')[0].innerHTML

        const send = {canvasId}
        
        $.ajax({
            type: "DELETE",
            url: "/manager/del",
            data: send,
            success: function (data) {
                if (data == 'true') {
                    var indexToRemove = mngId.findIndex(id => id == canvasId)
                    if (indexToRemove != -1) {
                        mngId.splice(indexToRemove, 1)
                        mngTitle.splice(indexToRemove, 1)
                        mngUsers.splice(indexToRemove, 1)
                    } else {
                        indexToRemove = regId.findIndex(id => id == canvasId)
                        regId.splice(indexToRemove, 1)
                        regTitle.splice(indexToRemove, 1)
                    }

                    renderManageCanvas()
                    removeMainSection()
                    renderFbc(mngId, mngTitle, 'myControl')
                    renderFbc(regId, regTitle, 'notMyControl')
                } else {
                    console.log('fail remove canvas')
                }
            }
        })
    }

    function removeMainSection() {
            const html = `
        <div class="mt-4 mb-5">
            <div class="d-flex mb-3">
                <h3 class="ml-auto mr-auto">My Canvas</h3>
            </div>
            <div id="myControl" class="">
            </div>
        </div>
        <hr>
        <div class="mt-4 mb-5">
            <div class="d-flex mb-3">
                <h3 class="ml-auto mr-auto">Other's Canvas</h3>
            </div>
            <div id="notMyControl" class="">
            </div>
        </div>`
            $('section').html(html)
    }

    // $('body').on('change', '.form-check-input', function() {
    //     const canvases = document.getElementsByClassName('manageUsersCanvas')
    //     if ($(this).is(':checked')) {
    //         const canvasId = $(this).parent().parent().find('span').text()
    //         console.log(canvasId)
    //         // all the canvas divs in manage user form
            
    //         for (let canvas of canvases) {
    //             if (canvas.getElementsByTagName('span')[0].innerHTML != canvasId) {
    //                 const checkBoxes = canvas.getElementsByClassName('form-check-input')
    //                 for (let checkbox of checkBoxes) {
    //                     checkbox.disabled = true;
    //                 }
    //             }
    //         }
    //     } else {
    //         for (let canvas of canvases) {
    //             const checkBoxes = canvas.getElementsByClassName('form-check-input')
    //             for (let checkbox of checkBoxes) {
    //                 checkbox.disabled = false;
    //             }
    //         }
    //     }
    // })

    $('body').on('click', 'button.addUserPrompt', function() {
        const html = `<div class="input-group">
        <input type="text" class="form-control semantic" placeholder="New user email" >
        <div class="input-group-append">
            <button class="btn btn-primary addUserDone semantic" type="button">Add</button>
        </div></div>`
        $(this).parent().html(html)
    })
    
    $('body').on('click', '.manageUserContainer', function(e) {
        const name = e.target.classList
        if (!name.contains('semantic')) {
            renderManageUsers()

        }
    })

    $('body').on('click', 'button.addUserDone', function() {
        const email = [$(this).parent().prev().val()]
        const canvasId = $(this).parent().parent().parent().parent().children().find('span').text();
        
        const index = canvasIds.findIndex(id => id == canvasId)
        if (canvasUsers[index].includes(email[0])) {
            alert("Duplicate user email.")
            $(this).parent().prev().val('')
            return;
        }
        console.log(canvasUsers)
        //send update request
        console.log(canvasId)
        const type = "add"
        const send = {type, canvasId, email}

        if (validateEmail(JSON.stringify(email))){
        	console.log("validateEmail: " + validateEmail(JSON.stringify(email)))
	        $.ajax({
	            type: "POST",
	            url: "/manager/user",
	            data: send,
	            success: function (data) {
	                if (data == 'true') {
	                    const index = canvasIds.findIndex(id => id == canvasId)
	                    canvasUsers[index].push(email[0])
	                    Email.send({
							Host: "smtp.elasticemail.com",
	            			Username: "wangluya2014@gmail.com",
	            			Password: "818b6867-983b-46fb-839b-eb03ecbf5f3c",
	            			To: email,
	            			From: "wangluya2014@gmail.com",
	            			Subject: "This is the subject",
	            			Body: "Testing for register!."
	          			  });
	                    renderManageUsers()
	                } else {
	                    console.log('fail add user')
	                }
	            }
	        })
    	}
    })

</script>
</body>
</html>